\hypertarget{raid_8h}{}\section{src/raid.h File Reference}
\label{raid_8h}\index{src/raid.\+h@{src/raid.\+h}}


Raid client functions.  


{\ttfamily \#include $<$pthread.\+h$>$}\\*
{\ttfamily \#include $<$msgpack.\+h$>$}\\*
Include dependency graph for raid.\+h\+:
% FIG 0
This graph shows which files directly or indirectly include this file\+:
% FIG 1
\subsection*{Data Structures}
\begin{DoxyCompactItemize}
\item 
struct \hyperlink{structraid__socket}{raid\+\_\+socket}
\item 
struct \hyperlink{structraid__reader}{raid\+\_\+reader}
\item 
struct \hyperlink{structraid__writer}{raid\+\_\+writer}
\item 
struct \hyperlink{structraid__request}{raid\+\_\+request}
\item 
struct \hyperlink{structraid__client}{raid\+\_\+client}
\end{DoxyCompactItemize}
\subsection*{Typedefs}
\begin{DoxyCompactItemize}
\item 
typedef struct \hyperlink{structraid__socket}{raid\+\_\+socket} {\bfseries raid\+\_\+socket\+\_\+t}\hypertarget{raid_8h_a7755e4bd6e82ee0e37aa8e51861d62a1}{}\label{raid_8h_a7755e4bd6e82ee0e37aa8e51861d62a1}

\item 
typedef struct \hyperlink{structraid__reader}{raid\+\_\+reader} {\bfseries raid\+\_\+reader\+\_\+t}\hypertarget{raid_8h_a9a4b965fa2d26e915a0f886b8fc4a019}{}\label{raid_8h_a9a4b965fa2d26e915a0f886b8fc4a019}

\item 
typedef struct \hyperlink{structraid__writer}{raid\+\_\+writer} {\bfseries raid\+\_\+writer\+\_\+t}\hypertarget{raid_8h_a55c61251c63d29d313eff5960adde893}{}\label{raid_8h_a55c61251c63d29d313eff5960adde893}

\item 
typedef enum \hyperlink{raid_8h_a9a93bf8ecc500aa08040d9aaf45092f6}{raid\+\_\+state} \hyperlink{raid_8h_a8a814d10ff9eabbde9329f6ace017c96}{raid\+\_\+state\+\_\+t}
\item 
typedef void($\ast$ \hyperlink{raid_8h_a2bafa5ba775b326961e18b29d22909e0}{raid\+\_\+callback\+\_\+t}) (struct \hyperlink{structraid__client}{raid\+\_\+client} $\ast$, raid\+\_\+error\+\_\+t, void $\ast$)
\item 
typedef struct \hyperlink{structraid__request}{raid\+\_\+request} \hyperlink{raid_8h_a640ed237b27f996b25b1f86b53426783}{raid\+\_\+request\+\_\+t}
\item 
typedef struct \hyperlink{structraid__client}{raid\+\_\+client} \hyperlink{raid_8h_ac923840afcbc250633f630528ac0847c}{raid\+\_\+client\+\_\+t}
\end{DoxyCompactItemize}
\subsection*{Enumerations}
\begin{DoxyCompactItemize}
\item 
enum {\bfseries raid\+\_\+error\+\_\+t} \{ \\*
{\bfseries R\+A\+I\+D\+\_\+\+S\+U\+C\+C\+E\+SS}, 
{\bfseries R\+A\+I\+D\+\_\+\+I\+N\+V\+A\+L\+I\+D\+\_\+\+A\+R\+G\+U\+M\+E\+NT}, 
{\bfseries R\+A\+I\+D\+\_\+\+I\+N\+V\+A\+L\+I\+D\+\_\+\+A\+D\+D\+R\+E\+SS}, 
{\bfseries R\+A\+I\+D\+\_\+\+S\+O\+C\+K\+E\+T\+\_\+\+E\+R\+R\+OR}, 
\\*
{\bfseries R\+A\+I\+D\+\_\+\+C\+O\+N\+N\+E\+C\+T\+\_\+\+E\+R\+R\+OR}, 
{\bfseries R\+A\+I\+D\+\_\+\+R\+E\+C\+V\+\_\+\+T\+I\+M\+E\+O\+UT}, 
{\bfseries R\+A\+I\+D\+\_\+\+N\+O\+T\+\_\+\+C\+O\+N\+N\+E\+C\+T\+ED}, 
{\bfseries R\+A\+I\+D\+\_\+\+S\+H\+U\+T\+D\+O\+W\+N\+\_\+\+E\+R\+R\+OR}, 
\\*
{\bfseries R\+A\+I\+D\+\_\+\+C\+L\+O\+S\+E\+\_\+\+E\+R\+R\+OR}, 
{\bfseries R\+A\+I\+D\+\_\+\+U\+N\+K\+N\+O\+WN}
 \}\hypertarget{raid_8h_a6c13321d61c43439dd9ef25cfb216065}{}\label{raid_8h_a6c13321d61c43439dd9ef25cfb216065}

\item 
enum \hyperlink{raid_8h_a9a93bf8ecc500aa08040d9aaf45092f6}{raid\+\_\+state} \{ {\bfseries R\+A\+I\+D\+\_\+\+S\+T\+A\+T\+E\+\_\+\+W\+A\+I\+T\+\_\+\+M\+E\+S\+S\+A\+GE}, 
{\bfseries R\+A\+I\+D\+\_\+\+S\+T\+A\+T\+E\+\_\+\+P\+R\+O\+C\+E\+S\+S\+I\+N\+G\+\_\+\+M\+E\+S\+S\+A\+GE}
 \}
\end{DoxyCompactItemize}
\subsection*{Functions}
\begin{DoxyCompactItemize}
\item 
raid\+\_\+error\+\_\+t \hyperlink{raid_8h_aebb911c0fe602dd8fc05dddf65e629fc}{raid\+\_\+connect} (\hyperlink{raid_8h_ac923840afcbc250633f630528ac0847c}{raid\+\_\+client\+\_\+t} $\ast$cl, const char $\ast$host, const char $\ast$port)
\begin{DoxyCompactList}\small\item\em Connect to the given host and port. \end{DoxyCompactList}\item 
raid\+\_\+error\+\_\+t \hyperlink{raid_8h_a99d78ad8efc81069b0d087ca4f70b6a4}{raid\+\_\+request} (\hyperlink{raid_8h_ac923840afcbc250633f630528ac0847c}{raid\+\_\+client\+\_\+t} $\ast$cl, \hyperlink{raid_8h_a2bafa5ba775b326961e18b29d22909e0}{raid\+\_\+callback\+\_\+t} cb, void $\ast$user\+\_\+data)
\begin{DoxyCompactList}\small\item\em Send a request to the raid server. \end{DoxyCompactList}\item 
const char $\ast$ \hyperlink{raid_8h_a82eade213279328d885f7cefcdc85215}{raid\+\_\+request\+\_\+etag} (\hyperlink{raid_8h_ac923840afcbc250633f630528ac0847c}{raid\+\_\+client\+\_\+t} $\ast$cl)
\begin{DoxyCompactList}\small\item\em Get the current request etag. \end{DoxyCompactList}\item 
const char $\ast$ \hyperlink{raid_8h_acca54ee4f44f75debb1b4b6b24fe288c}{raid\+\_\+response\+\_\+etag} (\hyperlink{raid_8h_ac923840afcbc250633f630528ac0847c}{raid\+\_\+client\+\_\+t} $\ast$cl)
\begin{DoxyCompactList}\small\item\em Get the current response etag. \end{DoxyCompactList}\item 
raid\+\_\+error\+\_\+t \hyperlink{raid_8h_ae43ce6d0ba89fcc5514ce3d2ba15524c}{raid\+\_\+close} (\hyperlink{raid_8h_ac923840afcbc250633f630528ac0847c}{raid\+\_\+client\+\_\+t} $\ast$cl)
\begin{DoxyCompactList}\small\item\em Close the connection, making subsequent calls invalid. \end{DoxyCompactList}\item 
bool \hyperlink{raid_8h_a7e6d1e2dfeeffae3b26fb40262396c50}{raid\+\_\+is\+\_\+code} (\hyperlink{raid_8h_ac923840afcbc250633f630528ac0847c}{raid\+\_\+client\+\_\+t} $\ast$cl, const char $\ast$code)
\begin{DoxyCompactList}\small\item\em Returns true if the response message code is equal to this one. \end{DoxyCompactList}\item 
bool \hyperlink{raid_8h_a73159ed7001e6a03621cc424157054fc}{raid\+\_\+read\+\_\+code} (\hyperlink{raid_8h_ac923840afcbc250633f630528ac0847c}{raid\+\_\+client\+\_\+t} $\ast$cl, char $\ast$$\ast$res, size\+\_\+t $\ast$len)
\begin{DoxyCompactList}\small\item\em Reads the code from the response message. \end{DoxyCompactList}\item 
bool \hyperlink{raid_8h_a3bc9097ff95c247ab355e1d5961354e6}{raid\+\_\+read\+\_\+int} (\hyperlink{raid_8h_ac923840afcbc250633f630528ac0847c}{raid\+\_\+client\+\_\+t} $\ast$cl, int64\+\_\+t $\ast$res)
\begin{DoxyCompactList}\small\item\em Reads an integer from the response message body. \end{DoxyCompactList}\item 
bool \hyperlink{raid_8h_a1d0801f3d2e3bfa093ce21bc2e8aa6e7}{raid\+\_\+read\+\_\+float} (\hyperlink{raid_8h_ac923840afcbc250633f630528ac0847c}{raid\+\_\+client\+\_\+t} $\ast$cl, double $\ast$res)
\begin{DoxyCompactList}\small\item\em Reads a float from the response message body. \end{DoxyCompactList}\item 
bool \hyperlink{raid_8h_a1f912aaebb6fb2c5c94abd700f8e700a}{raid\+\_\+read\+\_\+string} (\hyperlink{raid_8h_ac923840afcbc250633f630528ac0847c}{raid\+\_\+client\+\_\+t} $\ast$cl, char $\ast$$\ast$res, size\+\_\+t $\ast$len)
\begin{DoxyCompactList}\small\item\em Reads a string from the response message body. \end{DoxyCompactList}\item 
bool \hyperlink{raid_8h_ac29f5ab4aceb126e74a9a444051c0b24}{raid\+\_\+read\+\_\+map\+\_\+key} (\hyperlink{raid_8h_ac923840afcbc250633f630528ac0847c}{raid\+\_\+client\+\_\+t} $\ast$cl, char $\ast$$\ast$key, size\+\_\+t $\ast$len)
\begin{DoxyCompactList}\small\item\em Reads the current map key. \end{DoxyCompactList}\item 
bool \hyperlink{raid_8h_a4b9abf46e0c24e406cd5563a723fd37e}{raid\+\_\+read\+\_\+begin\+\_\+array} (\hyperlink{raid_8h_ac923840afcbc250633f630528ac0847c}{raid\+\_\+client\+\_\+t} $\ast$cl, size\+\_\+t $\ast$len)
\begin{DoxyCompactList}\small\item\em Begins reading an array from the response message body. \end{DoxyCompactList}\item 
void \hyperlink{raid_8h_acc541c6b4351f7dfa60b641314b6cc10}{raid\+\_\+read\+\_\+end\+\_\+array} (\hyperlink{raid_8h_ac923840afcbc250633f630528ac0847c}{raid\+\_\+client\+\_\+t} $\ast$cl)
\begin{DoxyCompactList}\small\item\em Stops reading an array from the response message body. \end{DoxyCompactList}\item 
bool \hyperlink{raid_8h_ad0db498600ab2cb82928781abccc69b9}{raid\+\_\+read\+\_\+begin\+\_\+map} (\hyperlink{raid_8h_ac923840afcbc250633f630528ac0847c}{raid\+\_\+client\+\_\+t} $\ast$cl, size\+\_\+t $\ast$len)
\begin{DoxyCompactList}\small\item\em Begins reading a map from the response message body. \end{DoxyCompactList}\item 
void \hyperlink{raid_8h_aa84c4cfd3499c55810ac6b10febccf0d}{raid\+\_\+read\+\_\+end\+\_\+map} (\hyperlink{raid_8h_ac923840afcbc250633f630528ac0847c}{raid\+\_\+client\+\_\+t} $\ast$cl)
\begin{DoxyCompactList}\small\item\em Stops reading a map from the response message body. \end{DoxyCompactList}\item 
bool \hyperlink{raid_8h_a6978e0838bab0ccd146d318b61195336}{raid\+\_\+read\+\_\+next} (\hyperlink{raid_8h_ac923840afcbc250633f630528ac0847c}{raid\+\_\+client\+\_\+t} $\ast$cl)
\begin{DoxyCompactList}\small\item\em Advance to the next item in the current array or map. \end{DoxyCompactList}\item 
raid\+\_\+error\+\_\+t \hyperlink{raid_8h_aa85e13b48256943cd66f9eb90449f87e}{raid\+\_\+write\+\_\+message} (\hyperlink{raid_8h_ac923840afcbc250633f630528ac0847c}{raid\+\_\+client\+\_\+t} $\ast$cl, const char $\ast$action)
\begin{DoxyCompactList}\small\item\em Begin writing a request message to send to the server. \end{DoxyCompactList}\item 
raid\+\_\+error\+\_\+t \hyperlink{raid_8h_acdc60680cbd2b7ca0263aaabd4f3fb39}{raid\+\_\+write\+\_\+int} (\hyperlink{raid_8h_ac923840afcbc250633f630528ac0847c}{raid\+\_\+client\+\_\+t} $\ast$cl, int n)
\begin{DoxyCompactList}\small\item\em Write an integer in the request body. \end{DoxyCompactList}\item 
raid\+\_\+error\+\_\+t \hyperlink{raid_8h_abb4778d9faadd73c37a882db6543a108}{raid\+\_\+write\+\_\+float} (\hyperlink{raid_8h_ac923840afcbc250633f630528ac0847c}{raid\+\_\+client\+\_\+t} $\ast$cl, float n)
\begin{DoxyCompactList}\small\item\em Write a float in the request body. \end{DoxyCompactList}\item 
raid\+\_\+error\+\_\+t \hyperlink{raid_8h_ab9b42b31f56b349740b79c5bc4d7b1f6}{raid\+\_\+write\+\_\+string} (\hyperlink{raid_8h_ac923840afcbc250633f630528ac0847c}{raid\+\_\+client\+\_\+t} $\ast$cl, const char $\ast$str, size\+\_\+t len)
\begin{DoxyCompactList}\small\item\em Write a string in the request body. \end{DoxyCompactList}\item 
raid\+\_\+error\+\_\+t \hyperlink{raid_8h_a1b0e1b7dd7a96581c4667c513ef4445f}{raid\+\_\+write\+\_\+array} (\hyperlink{raid_8h_ac923840afcbc250633f630528ac0847c}{raid\+\_\+client\+\_\+t} $\ast$cl, size\+\_\+t len)
\begin{DoxyCompactList}\small\item\em Write an array in the request body. \end{DoxyCompactList}\item 
raid\+\_\+error\+\_\+t \hyperlink{raid_8h_ac69f7e6ca1c67d2ba248f928836410b0}{raid\+\_\+write\+\_\+map} (\hyperlink{raid_8h_ac923840afcbc250633f630528ac0847c}{raid\+\_\+client\+\_\+t} $\ast$cl, size\+\_\+t keys\+\_\+len)
\begin{DoxyCompactList}\small\item\em Write a map in the request body. \end{DoxyCompactList}\item 
raid\+\_\+error\+\_\+t \hyperlink{raid_8h_a1682926f114696f08d0021d4d6a1c94d}{raid\+\_\+write\+\_\+arrayf} (\hyperlink{raid_8h_ac923840afcbc250633f630528ac0847c}{raid\+\_\+client\+\_\+t} $\ast$cl, int n, const char $\ast$format,...)
\begin{DoxyCompactList}\small\item\em Variadic function to write an array in the request body according to the given format and arguments passed, e.\+g.\+: {\ttfamily raid\+\_\+write\+\_\+arrayf}(cl, 2, \char`\"{}\%d \%s\char`\"{}, 10, \char`\"{}string\char`\"{}) \end{DoxyCompactList}\item 
raid\+\_\+error\+\_\+t \hyperlink{raid_8h_ad6231c2ba8c4a0ef316dadc831c11b08}{raid\+\_\+write\+\_\+mapf} (\hyperlink{raid_8h_ac923840afcbc250633f630528ac0847c}{raid\+\_\+client\+\_\+t} $\ast$cl, int n, const char $\ast$format,...)
\begin{DoxyCompactList}\small\item\em Variadic function to write a map in the request body according to the given format and arguments passed, e.\+g.\+: {\ttfamily raid\+\_\+write\+\_\+mapf}(cl, 2, \char`\"{}\textquotesingle{}number\textquotesingle{} \%d \textquotesingle{}name\textquotesingle{} \%s\char`\"{}, 10, \char`\"{}string\char`\"{}) \end{DoxyCompactList}\item 
const char $\ast$ \hyperlink{raid_8h_ab9b6e816697237794b47f66cfa6973fc}{raid\+\_\+error\+\_\+to\+\_\+string} (raid\+\_\+error\+\_\+t err)
\begin{DoxyCompactList}\small\item\em Get human-\/readable description for errors. \end{DoxyCompactList}\end{DoxyCompactItemize}


\subsection{Detailed Description}
Raid client functions. 



\subsection{Typedef Documentation}
\index{raid.\+h@{raid.\+h}!raid\+\_\+callback\+\_\+t@{raid\+\_\+callback\+\_\+t}}
\index{raid\+\_\+callback\+\_\+t@{raid\+\_\+callback\+\_\+t}!raid.\+h@{raid.\+h}}
\subsubsection[{\texorpdfstring{raid\+\_\+callback\+\_\+t}{raid_callback_t}}]{\setlength{\rightskip}{0pt plus 5cm}typedef void($\ast$ raid\+\_\+callback\+\_\+t) (struct {\bf raid\+\_\+client} $\ast$, raid\+\_\+error\+\_\+t, void $\ast$)}\hypertarget{raid_8h_a2bafa5ba775b326961e18b29d22909e0}{}\label{raid_8h_a2bafa5ba775b326961e18b29d22909e0}
The type of the request callback function. \index{raid.\+h@{raid.\+h}!raid\+\_\+client\+\_\+t@{raid\+\_\+client\+\_\+t}}
\index{raid\+\_\+client\+\_\+t@{raid\+\_\+client\+\_\+t}!raid.\+h@{raid.\+h}}
\subsubsection[{\texorpdfstring{raid\+\_\+client\+\_\+t}{raid_client_t}}]{\setlength{\rightskip}{0pt plus 5cm}typedef struct {\bf raid\+\_\+client}  {\bf raid\+\_\+client\+\_\+t}}\hypertarget{raid_8h_ac923840afcbc250633f630528ac0847c}{}\label{raid_8h_ac923840afcbc250633f630528ac0847c}
The client state holding sockets, requests, etc... \index{raid.\+h@{raid.\+h}!raid\+\_\+request\+\_\+t@{raid\+\_\+request\+\_\+t}}
\index{raid\+\_\+request\+\_\+t@{raid\+\_\+request\+\_\+t}!raid.\+h@{raid.\+h}}
\subsubsection[{\texorpdfstring{raid\+\_\+request\+\_\+t}{raid_request_t}}]{\setlength{\rightskip}{0pt plus 5cm}typedef struct {\bf raid\+\_\+request}  {\bf raid\+\_\+request\+\_\+t}}\hypertarget{raid_8h_a640ed237b27f996b25b1f86b53426783}{}\label{raid_8h_a640ed237b27f996b25b1f86b53426783}
A Raid request. \index{raid.\+h@{raid.\+h}!raid\+\_\+state\+\_\+t@{raid\+\_\+state\+\_\+t}}
\index{raid\+\_\+state\+\_\+t@{raid\+\_\+state\+\_\+t}!raid.\+h@{raid.\+h}}
\subsubsection[{\texorpdfstring{raid\+\_\+state\+\_\+t}{raid_state_t}}]{\setlength{\rightskip}{0pt plus 5cm}typedef enum {\bf raid\+\_\+state}  {\bf raid\+\_\+state\+\_\+t}}\hypertarget{raid_8h_a8a814d10ff9eabbde9329f6ace017c96}{}\label{raid_8h_a8a814d10ff9eabbde9329f6ace017c96}
A Raid request. 

\subsection{Enumeration Type Documentation}
\index{raid.\+h@{raid.\+h}!raid\+\_\+state@{raid\+\_\+state}}
\index{raid\+\_\+state@{raid\+\_\+state}!raid.\+h@{raid.\+h}}
\subsubsection[{\texorpdfstring{raid\+\_\+state}{raid_state}}]{\setlength{\rightskip}{0pt plus 5cm}enum {\bf raid\+\_\+state}}\hypertarget{raid_8h_a9a93bf8ecc500aa08040d9aaf45092f6}{}\label{raid_8h_a9a93bf8ecc500aa08040d9aaf45092f6}
A Raid request. 

\subsection{Function Documentation}
\index{raid.\+h@{raid.\+h}!raid\+\_\+close@{raid\+\_\+close}}
\index{raid\+\_\+close@{raid\+\_\+close}!raid.\+h@{raid.\+h}}
\subsubsection[{\texorpdfstring{raid\+\_\+close(raid\+\_\+client\+\_\+t $\ast$cl)}{raid_close(raid_client_t *cl)}}]{\setlength{\rightskip}{0pt plus 5cm}raid\+\_\+error\+\_\+t raid\+\_\+close (
\begin{DoxyParamCaption}
\item[{{\bf raid\+\_\+client\+\_\+t} $\ast$}]{cl}
\end{DoxyParamCaption}
)}\hypertarget{raid_8h_ae43ce6d0ba89fcc5514ce3d2ba15524c}{}\label{raid_8h_ae43ce6d0ba89fcc5514ce3d2ba15524c}


Close the connection, making subsequent calls invalid. 


\begin{DoxyParams}{Parameters}
{\em cl} & Raid client instance. \\
\hline
\end{DoxyParams}
\begin{DoxyReturn}{Returns}
Any errors that might occur. 
\end{DoxyReturn}
\index{raid.\+h@{raid.\+h}!raid\+\_\+connect@{raid\+\_\+connect}}
\index{raid\+\_\+connect@{raid\+\_\+connect}!raid.\+h@{raid.\+h}}
\subsubsection[{\texorpdfstring{raid\+\_\+connect(raid\+\_\+client\+\_\+t $\ast$cl, const char $\ast$host, const char $\ast$port)}{raid_connect(raid_client_t *cl, const char *host, const char *port)}}]{\setlength{\rightskip}{0pt plus 5cm}raid\+\_\+error\+\_\+t raid\+\_\+connect (
\begin{DoxyParamCaption}
\item[{{\bf raid\+\_\+client\+\_\+t} $\ast$}]{cl, }
\item[{const char $\ast$}]{host, }
\item[{const char $\ast$}]{port}
\end{DoxyParamCaption}
)}\hypertarget{raid_8h_aebb911c0fe602dd8fc05dddf65e629fc}{}\label{raid_8h_aebb911c0fe602dd8fc05dddf65e629fc}


Connect to the given host and port. 


\begin{DoxyParams}{Parameters}
{\em cl} & Raid client instance. \\
\hline
{\em host} & Hostname to connect. \\
\hline
{\em port} & Port to connect in the host. \\
\hline
\end{DoxyParams}
\begin{DoxyReturn}{Returns}
Any errors that might occur. 
\end{DoxyReturn}
\index{raid.\+h@{raid.\+h}!raid\+\_\+error\+\_\+to\+\_\+string@{raid\+\_\+error\+\_\+to\+\_\+string}}
\index{raid\+\_\+error\+\_\+to\+\_\+string@{raid\+\_\+error\+\_\+to\+\_\+string}!raid.\+h@{raid.\+h}}
\subsubsection[{\texorpdfstring{raid\+\_\+error\+\_\+to\+\_\+string(raid\+\_\+error\+\_\+t err)}{raid_error_to_string(raid_error_t err)}}]{\setlength{\rightskip}{0pt plus 5cm}const char$\ast$ raid\+\_\+error\+\_\+to\+\_\+string (
\begin{DoxyParamCaption}
\item[{raid\+\_\+error\+\_\+t}]{err}
\end{DoxyParamCaption}
)}\hypertarget{raid_8h_ab9b6e816697237794b47f66cfa6973fc}{}\label{raid_8h_ab9b6e816697237794b47f66cfa6973fc}


Get human-\/readable description for errors. 


\begin{DoxyParams}{Parameters}
{\em err} & The error code, \\
\hline
\end{DoxyParams}
\begin{DoxyReturn}{Returns}
Error description. 
\end{DoxyReturn}
\index{raid.\+h@{raid.\+h}!raid\+\_\+is\+\_\+code@{raid\+\_\+is\+\_\+code}}
\index{raid\+\_\+is\+\_\+code@{raid\+\_\+is\+\_\+code}!raid.\+h@{raid.\+h}}
\subsubsection[{\texorpdfstring{raid\+\_\+is\+\_\+code(raid\+\_\+client\+\_\+t $\ast$cl, const char $\ast$code)}{raid_is_code(raid_client_t *cl, const char *code)}}]{\setlength{\rightskip}{0pt plus 5cm}bool raid\+\_\+is\+\_\+code (
\begin{DoxyParamCaption}
\item[{{\bf raid\+\_\+client\+\_\+t} $\ast$}]{cl, }
\item[{const char $\ast$}]{code}
\end{DoxyParamCaption}
)}\hypertarget{raid_8h_a7e6d1e2dfeeffae3b26fb40262396c50}{}\label{raid_8h_a7e6d1e2dfeeffae3b26fb40262396c50}


Returns true if the response message code is equal to this one. 


\begin{DoxyParams}{Parameters}
{\em cl} & Raid client instance. \\
\hline
{\em code} & String with the code to compare. \\
\hline
\end{DoxyParams}
\begin{DoxyReturn}{Returns}
Whether response message code is equal or not. 
\end{DoxyReturn}
\index{raid.\+h@{raid.\+h}!raid\+\_\+read\+\_\+begin\+\_\+array@{raid\+\_\+read\+\_\+begin\+\_\+array}}
\index{raid\+\_\+read\+\_\+begin\+\_\+array@{raid\+\_\+read\+\_\+begin\+\_\+array}!raid.\+h@{raid.\+h}}
\subsubsection[{\texorpdfstring{raid\+\_\+read\+\_\+begin\+\_\+array(raid\+\_\+client\+\_\+t $\ast$cl, size\+\_\+t $\ast$len)}{raid_read_begin_array(raid_client_t *cl, size_t *len)}}]{\setlength{\rightskip}{0pt plus 5cm}bool raid\+\_\+read\+\_\+begin\+\_\+array (
\begin{DoxyParamCaption}
\item[{{\bf raid\+\_\+client\+\_\+t} $\ast$}]{cl, }
\item[{size\+\_\+t $\ast$}]{len}
\end{DoxyParamCaption}
)}\hypertarget{raid_8h_a4b9abf46e0c24e406cd5563a723fd37e}{}\label{raid_8h_a4b9abf46e0c24e406cd5563a723fd37e}


Begins reading an array from the response message body. 


\begin{DoxyParams}{Parameters}
{\em cl} & Raid client instance. \\
\hline
{\em len} & Pointer to receive the length of the array. \\
\hline
\end{DoxyParams}
\begin{DoxyReturn}{Returns}
Whether the value could be read or not. 
\end{DoxyReturn}
\index{raid.\+h@{raid.\+h}!raid\+\_\+read\+\_\+begin\+\_\+map@{raid\+\_\+read\+\_\+begin\+\_\+map}}
\index{raid\+\_\+read\+\_\+begin\+\_\+map@{raid\+\_\+read\+\_\+begin\+\_\+map}!raid.\+h@{raid.\+h}}
\subsubsection[{\texorpdfstring{raid\+\_\+read\+\_\+begin\+\_\+map(raid\+\_\+client\+\_\+t $\ast$cl, size\+\_\+t $\ast$len)}{raid_read_begin_map(raid_client_t *cl, size_t *len)}}]{\setlength{\rightskip}{0pt plus 5cm}bool raid\+\_\+read\+\_\+begin\+\_\+map (
\begin{DoxyParamCaption}
\item[{{\bf raid\+\_\+client\+\_\+t} $\ast$}]{cl, }
\item[{size\+\_\+t $\ast$}]{len}
\end{DoxyParamCaption}
)}\hypertarget{raid_8h_ad0db498600ab2cb82928781abccc69b9}{}\label{raid_8h_ad0db498600ab2cb82928781abccc69b9}


Begins reading a map from the response message body. 


\begin{DoxyParams}{Parameters}
{\em cl} & Raid client instance. \\
\hline
{\em len} & Pointer to receive the length of the map. \\
\hline
\end{DoxyParams}
\begin{DoxyReturn}{Returns}
Whether the value could be read or not. 
\end{DoxyReturn}
\index{raid.\+h@{raid.\+h}!raid\+\_\+read\+\_\+code@{raid\+\_\+read\+\_\+code}}
\index{raid\+\_\+read\+\_\+code@{raid\+\_\+read\+\_\+code}!raid.\+h@{raid.\+h}}
\subsubsection[{\texorpdfstring{raid\+\_\+read\+\_\+code(raid\+\_\+client\+\_\+t $\ast$cl, char $\ast$$\ast$res, size\+\_\+t $\ast$len)}{raid_read_code(raid_client_t *cl, char **res, size_t *len)}}]{\setlength{\rightskip}{0pt plus 5cm}bool raid\+\_\+read\+\_\+code (
\begin{DoxyParamCaption}
\item[{{\bf raid\+\_\+client\+\_\+t} $\ast$}]{cl, }
\item[{char $\ast$$\ast$}]{res, }
\item[{size\+\_\+t $\ast$}]{len}
\end{DoxyParamCaption}
)}\hypertarget{raid_8h_a73159ed7001e6a03621cc424157054fc}{}\label{raid_8h_a73159ed7001e6a03621cc424157054fc}


Reads the code from the response message. 


\begin{DoxyParams}{Parameters}
{\em cl} & Raid client instance. \\
\hline
{\em res} & Pointer to receive the code string. \\
\hline
{\em len} & Pointer to receive the length of the string. \\
\hline
\end{DoxyParams}
\begin{DoxyReturn}{Returns}
Whether the code could be read or not. 
\end{DoxyReturn}
\index{raid.\+h@{raid.\+h}!raid\+\_\+read\+\_\+end\+\_\+array@{raid\+\_\+read\+\_\+end\+\_\+array}}
\index{raid\+\_\+read\+\_\+end\+\_\+array@{raid\+\_\+read\+\_\+end\+\_\+array}!raid.\+h@{raid.\+h}}
\subsubsection[{\texorpdfstring{raid\+\_\+read\+\_\+end\+\_\+array(raid\+\_\+client\+\_\+t $\ast$cl)}{raid_read_end_array(raid_client_t *cl)}}]{\setlength{\rightskip}{0pt plus 5cm}void raid\+\_\+read\+\_\+end\+\_\+array (
\begin{DoxyParamCaption}
\item[{{\bf raid\+\_\+client\+\_\+t} $\ast$}]{cl}
\end{DoxyParamCaption}
)}\hypertarget{raid_8h_acc541c6b4351f7dfa60b641314b6cc10}{}\label{raid_8h_acc541c6b4351f7dfa60b641314b6cc10}


Stops reading an array from the response message body. 


\begin{DoxyParams}{Parameters}
{\em cl} & Raid client instance. \\
\hline
\end{DoxyParams}
\index{raid.\+h@{raid.\+h}!raid\+\_\+read\+\_\+end\+\_\+map@{raid\+\_\+read\+\_\+end\+\_\+map}}
\index{raid\+\_\+read\+\_\+end\+\_\+map@{raid\+\_\+read\+\_\+end\+\_\+map}!raid.\+h@{raid.\+h}}
\subsubsection[{\texorpdfstring{raid\+\_\+read\+\_\+end\+\_\+map(raid\+\_\+client\+\_\+t $\ast$cl)}{raid_read_end_map(raid_client_t *cl)}}]{\setlength{\rightskip}{0pt plus 5cm}void raid\+\_\+read\+\_\+end\+\_\+map (
\begin{DoxyParamCaption}
\item[{{\bf raid\+\_\+client\+\_\+t} $\ast$}]{cl}
\end{DoxyParamCaption}
)}\hypertarget{raid_8h_aa84c4cfd3499c55810ac6b10febccf0d}{}\label{raid_8h_aa84c4cfd3499c55810ac6b10febccf0d}


Stops reading a map from the response message body. 


\begin{DoxyParams}{Parameters}
{\em cl} & Raid client instance. \\
\hline
\end{DoxyParams}
\index{raid.\+h@{raid.\+h}!raid\+\_\+read\+\_\+float@{raid\+\_\+read\+\_\+float}}
\index{raid\+\_\+read\+\_\+float@{raid\+\_\+read\+\_\+float}!raid.\+h@{raid.\+h}}
\subsubsection[{\texorpdfstring{raid\+\_\+read\+\_\+float(raid\+\_\+client\+\_\+t $\ast$cl, double $\ast$res)}{raid_read_float(raid_client_t *cl, double *res)}}]{\setlength{\rightskip}{0pt plus 5cm}bool raid\+\_\+read\+\_\+float (
\begin{DoxyParamCaption}
\item[{{\bf raid\+\_\+client\+\_\+t} $\ast$}]{cl, }
\item[{double $\ast$}]{res}
\end{DoxyParamCaption}
)}\hypertarget{raid_8h_a1d0801f3d2e3bfa093ce21bc2e8aa6e7}{}\label{raid_8h_a1d0801f3d2e3bfa093ce21bc2e8aa6e7}


Reads a float from the response message body. 


\begin{DoxyParams}{Parameters}
{\em cl} & Raid client instance. \\
\hline
{\em res} & Pointer to receive float value. \\
\hline
\end{DoxyParams}
\begin{DoxyReturn}{Returns}
Whether the value could be read or not. 
\end{DoxyReturn}
\index{raid.\+h@{raid.\+h}!raid\+\_\+read\+\_\+int@{raid\+\_\+read\+\_\+int}}
\index{raid\+\_\+read\+\_\+int@{raid\+\_\+read\+\_\+int}!raid.\+h@{raid.\+h}}
\subsubsection[{\texorpdfstring{raid\+\_\+read\+\_\+int(raid\+\_\+client\+\_\+t $\ast$cl, int64\+\_\+t $\ast$res)}{raid_read_int(raid_client_t *cl, int64_t *res)}}]{\setlength{\rightskip}{0pt plus 5cm}bool raid\+\_\+read\+\_\+int (
\begin{DoxyParamCaption}
\item[{{\bf raid\+\_\+client\+\_\+t} $\ast$}]{cl, }
\item[{int64\+\_\+t $\ast$}]{res}
\end{DoxyParamCaption}
)}\hypertarget{raid_8h_a3bc9097ff95c247ab355e1d5961354e6}{}\label{raid_8h_a3bc9097ff95c247ab355e1d5961354e6}


Reads an integer from the response message body. 


\begin{DoxyParams}{Parameters}
{\em cl} & Raid client instance. \\
\hline
{\em res} & Pointer to receive integer value. \\
\hline
\end{DoxyParams}
\begin{DoxyReturn}{Returns}
Whether the value could be read or not. 
\end{DoxyReturn}
\index{raid.\+h@{raid.\+h}!raid\+\_\+read\+\_\+map\+\_\+key@{raid\+\_\+read\+\_\+map\+\_\+key}}
\index{raid\+\_\+read\+\_\+map\+\_\+key@{raid\+\_\+read\+\_\+map\+\_\+key}!raid.\+h@{raid.\+h}}
\subsubsection[{\texorpdfstring{raid\+\_\+read\+\_\+map\+\_\+key(raid\+\_\+client\+\_\+t $\ast$cl, char $\ast$$\ast$key, size\+\_\+t $\ast$len)}{raid_read_map_key(raid_client_t *cl, char **key, size_t *len)}}]{\setlength{\rightskip}{0pt plus 5cm}bool raid\+\_\+read\+\_\+map\+\_\+key (
\begin{DoxyParamCaption}
\item[{{\bf raid\+\_\+client\+\_\+t} $\ast$}]{cl, }
\item[{char $\ast$$\ast$}]{key, }
\item[{size\+\_\+t $\ast$}]{len}
\end{DoxyParamCaption}
)}\hypertarget{raid_8h_ac29f5ab4aceb126e74a9a444051c0b24}{}\label{raid_8h_ac29f5ab4aceb126e74a9a444051c0b24}


Reads the current map key. 


\begin{DoxyParams}{Parameters}
{\em cl} & Raid client instance. \\
\hline
{\em key} & Pointer to receive string value. \\
\hline
{\em len} & Pointer to receive the length of the string. \\
\hline
\end{DoxyParams}
\begin{DoxyReturn}{Returns}
Whether the value could be read or not. 
\end{DoxyReturn}
\index{raid.\+h@{raid.\+h}!raid\+\_\+read\+\_\+next@{raid\+\_\+read\+\_\+next}}
\index{raid\+\_\+read\+\_\+next@{raid\+\_\+read\+\_\+next}!raid.\+h@{raid.\+h}}
\subsubsection[{\texorpdfstring{raid\+\_\+read\+\_\+next(raid\+\_\+client\+\_\+t $\ast$cl)}{raid_read_next(raid_client_t *cl)}}]{\setlength{\rightskip}{0pt plus 5cm}bool raid\+\_\+read\+\_\+next (
\begin{DoxyParamCaption}
\item[{{\bf raid\+\_\+client\+\_\+t} $\ast$}]{cl}
\end{DoxyParamCaption}
)}\hypertarget{raid_8h_a6978e0838bab0ccd146d318b61195336}{}\label{raid_8h_a6978e0838bab0ccd146d318b61195336}


Advance to the next item in the current array or map. 


\begin{DoxyParams}{Parameters}
{\em cl} & Raid client instance. \\
\hline
\end{DoxyParams}
\begin{DoxyReturn}{Returns}
Whether the value could be read or not. 
\end{DoxyReturn}
\index{raid.\+h@{raid.\+h}!raid\+\_\+read\+\_\+string@{raid\+\_\+read\+\_\+string}}
\index{raid\+\_\+read\+\_\+string@{raid\+\_\+read\+\_\+string}!raid.\+h@{raid.\+h}}
\subsubsection[{\texorpdfstring{raid\+\_\+read\+\_\+string(raid\+\_\+client\+\_\+t $\ast$cl, char $\ast$$\ast$res, size\+\_\+t $\ast$len)}{raid_read_string(raid_client_t *cl, char **res, size_t *len)}}]{\setlength{\rightskip}{0pt plus 5cm}bool raid\+\_\+read\+\_\+string (
\begin{DoxyParamCaption}
\item[{{\bf raid\+\_\+client\+\_\+t} $\ast$}]{cl, }
\item[{char $\ast$$\ast$}]{res, }
\item[{size\+\_\+t $\ast$}]{len}
\end{DoxyParamCaption}
)}\hypertarget{raid_8h_a1f912aaebb6fb2c5c94abd700f8e700a}{}\label{raid_8h_a1f912aaebb6fb2c5c94abd700f8e700a}


Reads a string from the response message body. 


\begin{DoxyParams}{Parameters}
{\em cl} & Raid client instance. \\
\hline
{\em res} & Pointer to receive string value. \\
\hline
{\em len} & Pointer to receive the length of the string. \\
\hline
\end{DoxyParams}
\begin{DoxyReturn}{Returns}
Whether the value could be read or not. 
\end{DoxyReturn}
\index{raid.\+h@{raid.\+h}!raid\+\_\+request@{raid\+\_\+request}}
\index{raid\+\_\+request@{raid\+\_\+request}!raid.\+h@{raid.\+h}}
\subsubsection[{\texorpdfstring{raid\+\_\+request(raid\+\_\+client\+\_\+t $\ast$cl, raid\+\_\+callback\+\_\+t cb, void $\ast$user\+\_\+data)}{raid_request(raid_client_t *cl, raid_callback_t cb, void *user_data)}}]{\setlength{\rightskip}{0pt plus 5cm}raid\+\_\+error\+\_\+t {\bf raid\+\_\+request} (
\begin{DoxyParamCaption}
\item[{{\bf raid\+\_\+client\+\_\+t} $\ast$}]{cl, }
\item[{{\bf raid\+\_\+callback\+\_\+t}}]{cb, }
\item[{void $\ast$}]{user\+\_\+data}
\end{DoxyParamCaption}
)}\hypertarget{raid_8h_a99d78ad8efc81069b0d087ca4f70b6a4}{}\label{raid_8h_a99d78ad8efc81069b0d087ca4f70b6a4}


Send a request to the raid server. 


\begin{DoxyParams}{Parameters}
{\em cl} & Raid client instance. \\
\hline
{\em cb} & Response callback. \\
\hline
{\em user\+\_\+data} & Callback user data. \\
\hline
\end{DoxyParams}
\begin{DoxyReturn}{Returns}
Any errors that might occur. 
\end{DoxyReturn}
\index{raid.\+h@{raid.\+h}!raid\+\_\+request\+\_\+etag@{raid\+\_\+request\+\_\+etag}}
\index{raid\+\_\+request\+\_\+etag@{raid\+\_\+request\+\_\+etag}!raid.\+h@{raid.\+h}}
\subsubsection[{\texorpdfstring{raid\+\_\+request\+\_\+etag(raid\+\_\+client\+\_\+t $\ast$cl)}{raid_request_etag(raid_client_t *cl)}}]{\setlength{\rightskip}{0pt plus 5cm}const char$\ast$ raid\+\_\+request\+\_\+etag (
\begin{DoxyParamCaption}
\item[{{\bf raid\+\_\+client\+\_\+t} $\ast$}]{cl}
\end{DoxyParamCaption}
)}\hypertarget{raid_8h_a82eade213279328d885f7cefcdc85215}{}\label{raid_8h_a82eade213279328d885f7cefcdc85215}


Get the current request etag. 


\begin{DoxyParams}{Parameters}
{\em cl} & Raid client instance. \\
\hline
\end{DoxyParams}
\begin{DoxyReturn}{Returns}
The current request etag or N\+U\+LL if not currently writing a request. 
\end{DoxyReturn}
\index{raid.\+h@{raid.\+h}!raid\+\_\+response\+\_\+etag@{raid\+\_\+response\+\_\+etag}}
\index{raid\+\_\+response\+\_\+etag@{raid\+\_\+response\+\_\+etag}!raid.\+h@{raid.\+h}}
\subsubsection[{\texorpdfstring{raid\+\_\+response\+\_\+etag(raid\+\_\+client\+\_\+t $\ast$cl)}{raid_response_etag(raid_client_t *cl)}}]{\setlength{\rightskip}{0pt plus 5cm}const char$\ast$ raid\+\_\+response\+\_\+etag (
\begin{DoxyParamCaption}
\item[{{\bf raid\+\_\+client\+\_\+t} $\ast$}]{cl}
\end{DoxyParamCaption}
)}\hypertarget{raid_8h_acca54ee4f44f75debb1b4b6b24fe288c}{}\label{raid_8h_acca54ee4f44f75debb1b4b6b24fe288c}


Get the current response etag. 


\begin{DoxyParams}{Parameters}
{\em cl} & Raid client instance. \\
\hline
\end{DoxyParams}
\begin{DoxyReturn}{Returns}
The current response etag or N\+U\+LL if not currently reading a response. 
\end{DoxyReturn}
\index{raid.\+h@{raid.\+h}!raid\+\_\+write\+\_\+array@{raid\+\_\+write\+\_\+array}}
\index{raid\+\_\+write\+\_\+array@{raid\+\_\+write\+\_\+array}!raid.\+h@{raid.\+h}}
\subsubsection[{\texorpdfstring{raid\+\_\+write\+\_\+array(raid\+\_\+client\+\_\+t $\ast$cl, size\+\_\+t len)}{raid_write_array(raid_client_t *cl, size_t len)}}]{\setlength{\rightskip}{0pt plus 5cm}raid\+\_\+error\+\_\+t raid\+\_\+write\+\_\+array (
\begin{DoxyParamCaption}
\item[{{\bf raid\+\_\+client\+\_\+t} $\ast$}]{cl, }
\item[{size\+\_\+t}]{len}
\end{DoxyParamCaption}
)}\hypertarget{raid_8h_a1b0e1b7dd7a96581c4667c513ef4445f}{}\label{raid_8h_a1b0e1b7dd7a96581c4667c513ef4445f}


Write an array in the request body. 


\begin{DoxyParams}{Parameters}
{\em cl} & Raid client instance. \\
\hline
{\em len} & Array size. \\
\hline
\end{DoxyParams}
\begin{DoxyReturn}{Returns}
Any errors that might occur. 
\end{DoxyReturn}
\index{raid.\+h@{raid.\+h}!raid\+\_\+write\+\_\+arrayf@{raid\+\_\+write\+\_\+arrayf}}
\index{raid\+\_\+write\+\_\+arrayf@{raid\+\_\+write\+\_\+arrayf}!raid.\+h@{raid.\+h}}
\subsubsection[{\texorpdfstring{raid\+\_\+write\+\_\+arrayf(raid\+\_\+client\+\_\+t $\ast$cl, int n, const char $\ast$format,...)}{raid_write_arrayf(raid_client_t *cl, int n, const char *format,...)}}]{\setlength{\rightskip}{0pt plus 5cm}raid\+\_\+error\+\_\+t raid\+\_\+write\+\_\+arrayf (
\begin{DoxyParamCaption}
\item[{{\bf raid\+\_\+client\+\_\+t} $\ast$}]{cl, }
\item[{int}]{n, }
\item[{const char $\ast$}]{format, }
\item[{}]{...}
\end{DoxyParamCaption}
)}\hypertarget{raid_8h_a1682926f114696f08d0021d4d6a1c94d}{}\label{raid_8h_a1682926f114696f08d0021d4d6a1c94d}


Variadic function to write an array in the request body according to the given format and arguments passed, e.\+g.\+: {\ttfamily raid\+\_\+write\+\_\+arrayf}(cl, 2, \char`\"{}\%d \%s\char`\"{}, 10, \char`\"{}string\char`\"{}) 


\begin{DoxyParams}{Parameters}
{\em cl} & Raid client instance. \\
\hline
{\em n} & Number of arguments. \\
\hline
{\em format} & Format string. \\
\hline
{\em ...} & Arguments to put in the array. \\
\hline
\end{DoxyParams}
\begin{DoxyReturn}{Returns}
Any errors that might occur. 
\end{DoxyReturn}
\index{raid.\+h@{raid.\+h}!raid\+\_\+write\+\_\+float@{raid\+\_\+write\+\_\+float}}
\index{raid\+\_\+write\+\_\+float@{raid\+\_\+write\+\_\+float}!raid.\+h@{raid.\+h}}
\subsubsection[{\texorpdfstring{raid\+\_\+write\+\_\+float(raid\+\_\+client\+\_\+t $\ast$cl, float n)}{raid_write_float(raid_client_t *cl, float n)}}]{\setlength{\rightskip}{0pt plus 5cm}raid\+\_\+error\+\_\+t raid\+\_\+write\+\_\+float (
\begin{DoxyParamCaption}
\item[{{\bf raid\+\_\+client\+\_\+t} $\ast$}]{cl, }
\item[{float}]{n}
\end{DoxyParamCaption}
)}\hypertarget{raid_8h_abb4778d9faadd73c37a882db6543a108}{}\label{raid_8h_abb4778d9faadd73c37a882db6543a108}


Write a float in the request body. 


\begin{DoxyParams}{Parameters}
{\em cl} & Raid client instance. \\
\hline
{\em n} & Float number. \\
\hline
\end{DoxyParams}
\begin{DoxyReturn}{Returns}
Any errors that might occur. 
\end{DoxyReturn}
\index{raid.\+h@{raid.\+h}!raid\+\_\+write\+\_\+int@{raid\+\_\+write\+\_\+int}}
\index{raid\+\_\+write\+\_\+int@{raid\+\_\+write\+\_\+int}!raid.\+h@{raid.\+h}}
\subsubsection[{\texorpdfstring{raid\+\_\+write\+\_\+int(raid\+\_\+client\+\_\+t $\ast$cl, int n)}{raid_write_int(raid_client_t *cl, int n)}}]{\setlength{\rightskip}{0pt plus 5cm}raid\+\_\+error\+\_\+t raid\+\_\+write\+\_\+int (
\begin{DoxyParamCaption}
\item[{{\bf raid\+\_\+client\+\_\+t} $\ast$}]{cl, }
\item[{int}]{n}
\end{DoxyParamCaption}
)}\hypertarget{raid_8h_acdc60680cbd2b7ca0263aaabd4f3fb39}{}\label{raid_8h_acdc60680cbd2b7ca0263aaabd4f3fb39}


Write an integer in the request body. 


\begin{DoxyParams}{Parameters}
{\em cl} & Raid client instance. \\
\hline
{\em n} & Integer number. \\
\hline
\end{DoxyParams}
\begin{DoxyReturn}{Returns}
Any errors that might occur. 
\end{DoxyReturn}
\index{raid.\+h@{raid.\+h}!raid\+\_\+write\+\_\+map@{raid\+\_\+write\+\_\+map}}
\index{raid\+\_\+write\+\_\+map@{raid\+\_\+write\+\_\+map}!raid.\+h@{raid.\+h}}
\subsubsection[{\texorpdfstring{raid\+\_\+write\+\_\+map(raid\+\_\+client\+\_\+t $\ast$cl, size\+\_\+t keys\+\_\+len)}{raid_write_map(raid_client_t *cl, size_t keys_len)}}]{\setlength{\rightskip}{0pt plus 5cm}raid\+\_\+error\+\_\+t raid\+\_\+write\+\_\+map (
\begin{DoxyParamCaption}
\item[{{\bf raid\+\_\+client\+\_\+t} $\ast$}]{cl, }
\item[{size\+\_\+t}]{keys\+\_\+len}
\end{DoxyParamCaption}
)}\hypertarget{raid_8h_ac69f7e6ca1c67d2ba248f928836410b0}{}\label{raid_8h_ac69f7e6ca1c67d2ba248f928836410b0}


Write a map in the request body. 


\begin{DoxyParams}{Parameters}
{\em cl} & Raid client instance. \\
\hline
{\em keys\+\_\+len} & Number of keys in the map. \\
\hline
\end{DoxyParams}
\begin{DoxyReturn}{Returns}
Any errors that might occur. 
\end{DoxyReturn}
\index{raid.\+h@{raid.\+h}!raid\+\_\+write\+\_\+mapf@{raid\+\_\+write\+\_\+mapf}}
\index{raid\+\_\+write\+\_\+mapf@{raid\+\_\+write\+\_\+mapf}!raid.\+h@{raid.\+h}}
\subsubsection[{\texorpdfstring{raid\+\_\+write\+\_\+mapf(raid\+\_\+client\+\_\+t $\ast$cl, int n, const char $\ast$format,...)}{raid_write_mapf(raid_client_t *cl, int n, const char *format,...)}}]{\setlength{\rightskip}{0pt plus 5cm}raid\+\_\+error\+\_\+t raid\+\_\+write\+\_\+mapf (
\begin{DoxyParamCaption}
\item[{{\bf raid\+\_\+client\+\_\+t} $\ast$}]{cl, }
\item[{int}]{n, }
\item[{const char $\ast$}]{format, }
\item[{}]{...}
\end{DoxyParamCaption}
)}\hypertarget{raid_8h_ad6231c2ba8c4a0ef316dadc831c11b08}{}\label{raid_8h_ad6231c2ba8c4a0ef316dadc831c11b08}


Variadic function to write a map in the request body according to the given format and arguments passed, e.\+g.\+: {\ttfamily raid\+\_\+write\+\_\+mapf}(cl, 2, \char`\"{}\textquotesingle{}number\textquotesingle{} \%d \textquotesingle{}name\textquotesingle{} \%s\char`\"{}, 10, \char`\"{}string\char`\"{}) 


\begin{DoxyParams}{Parameters}
{\em cl} & Raid client instance. \\
\hline
{\em n} & Number of arguments. \\
\hline
{\em format} & Format string. \\
\hline
{\em ...} & Arguments to put in the map. \\
\hline
\end{DoxyParams}
\begin{DoxyReturn}{Returns}
Any errors that might occur. 
\end{DoxyReturn}
\index{raid.\+h@{raid.\+h}!raid\+\_\+write\+\_\+message@{raid\+\_\+write\+\_\+message}}
\index{raid\+\_\+write\+\_\+message@{raid\+\_\+write\+\_\+message}!raid.\+h@{raid.\+h}}
\subsubsection[{\texorpdfstring{raid\+\_\+write\+\_\+message(raid\+\_\+client\+\_\+t $\ast$cl, const char $\ast$action)}{raid_write_message(raid_client_t *cl, const char *action)}}]{\setlength{\rightskip}{0pt plus 5cm}raid\+\_\+error\+\_\+t raid\+\_\+write\+\_\+message (
\begin{DoxyParamCaption}
\item[{{\bf raid\+\_\+client\+\_\+t} $\ast$}]{cl, }
\item[{const char $\ast$}]{action}
\end{DoxyParamCaption}
)}\hypertarget{raid_8h_aa85e13b48256943cd66f9eb90449f87e}{}\label{raid_8h_aa85e13b48256943cd66f9eb90449f87e}


Begin writing a request message to send to the server. 


\begin{DoxyParams}{Parameters}
{\em cl} & Raid client instance. \\
\hline
{\em action} & Action of the message. \\
\hline
\end{DoxyParams}
\begin{DoxyReturn}{Returns}
Any errors that might occur. 
\end{DoxyReturn}
\index{raid.\+h@{raid.\+h}!raid\+\_\+write\+\_\+string@{raid\+\_\+write\+\_\+string}}
\index{raid\+\_\+write\+\_\+string@{raid\+\_\+write\+\_\+string}!raid.\+h@{raid.\+h}}
\subsubsection[{\texorpdfstring{raid\+\_\+write\+\_\+string(raid\+\_\+client\+\_\+t $\ast$cl, const char $\ast$str, size\+\_\+t len)}{raid_write_string(raid_client_t *cl, const char *str, size_t len)}}]{\setlength{\rightskip}{0pt plus 5cm}raid\+\_\+error\+\_\+t raid\+\_\+write\+\_\+string (
\begin{DoxyParamCaption}
\item[{{\bf raid\+\_\+client\+\_\+t} $\ast$}]{cl, }
\item[{const char $\ast$}]{str, }
\item[{size\+\_\+t}]{len}
\end{DoxyParamCaption}
)}\hypertarget{raid_8h_ab9b42b31f56b349740b79c5bc4d7b1f6}{}\label{raid_8h_ab9b42b31f56b349740b79c5bc4d7b1f6}


Write a string in the request body. 


\begin{DoxyParams}{Parameters}
{\em cl} & Raid client instance. \\
\hline
{\em str} & String data. \\
\hline
{\em len} & String size. \\
\hline
\end{DoxyParams}
\begin{DoxyReturn}{Returns}
Any errors that might occur. 
\end{DoxyReturn}
